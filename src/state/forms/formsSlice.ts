import {
  createAsyncThunk,
  createSlice,
  PayloadAction,
  current,
} from "@reduxjs/toolkit";
import { RootState, AppThunk } from "../store";
import { Form, Field } from "./types";
import { STATUS } from "../../helpers/constants";

export interface FormState {
  form: Form;
}
const initialState: FormState = {
  form: {
    name: "form",
    status: "idle",
    fields: [],
  },
};

export const formsSlice = createSlice({
  name: "forms",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    addField: (state, action: PayloadAction<Field>) => {
      state.form.fields.push(action.payload);
    },
  },

  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {},
});

export const { addField } = formsSlice.actions;

export const selectForms = (state: RootState) => state.forms;

export default formsSlice.reducer;
